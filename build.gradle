// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    // Build configuration
    ext.buildConfig = [
        minSdk     : 21,
        compileSdk : 28,
        targetSdk  : 28,
        versionCode: 1,
        versionName: '1.0'
    ]

    // Dependency versions
    ext.versions = [
        agp          : '3.4.0',
        spotless     : '3.20.0',
        ktlint       : '0.31.0',
        gvp          : '0.20.0',
        kotlin       : '1.3.21',
        appcompat    : '1.1.0-alpha04',
        activity     : '1.0.0-alpha06',
        lifecycle    : '2.0.0',
        recyclerView : '1.0.0',
        material     : '1.0.0',
        dagger       : '2.22.1',
        rxKotlin     : '2.3.0',
        rxAndroid    : '2.1.1',
        room         : '2.1.0-alpha07',
        retrofit     : '2.5.0',
        picasso      : '2.71828',
        threeten     : '1.2.0',
        timber       : '4.7.1',
        junit        : '4.12',
        mockito      : '2.24.5',
        mockitoKotlin: '2.1.0',
        orchestrator : '1.1.0',
        testRunner   : '1.1.1',
        testRules    : '1.1.1',
        testCore     : '1.1.0',
        espresso     : '3.1.1',
        rxidler      : '0.9.1',
    ]

    // Dependencies
    ext.deps = [
        kotlin      : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
        appcompat   : "androidx.appcompat:appcompat:$versions.appcompat",
        activity    : "androidx.activity:activity-ktx:$versions.activity",
        viewModel   : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle",
        recyclerView: "androidx.recyclerview:recyclerview:$versions.recyclerView",
        material    : "com.google.android.material:material:$versions.material",
        picasso     : "com.squareup.picasso:picasso:$versions.picasso",
        threeten    : "com.jakewharton.threetenabp:threetenabp:$versions.threeten",
        timber      : "com.jakewharton.timber:timber:$versions.timber",

        dagger      : [
            runtime        : "com.google.dagger:dagger:${versions.dagger}",
            compiler       : "com.google.dagger:dagger-compiler:${versions.dagger}",
            androidRuntime : "com.google.dagger:dagger-android-support:${versions.dagger}",
            androidCompiler: "com.google.dagger:dagger-android-processor:${versions.dagger}",
        ],

        rx          : [
            kotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            android: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
        ],

        'room'      : [
            'runtime' : "androidx.room:room-runtime:$versions.room",
            'compiler': "androidx.room:room-compiler:$versions.room",
            'rx'      : "androidx.room:room-rxjava2:$versions.room"
        ],

        retrofit    : [
            runtime      : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            rxAdapter    : "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}",
            gsonConverter: "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
        ],

        test        : [
            junit         : "junit:junit:$versions.junit",
            mockito       : "org.mockito:mockito-core:$versions.mockito",
            mockitoKotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin",
            mockitoAndroid: "org.mockito:mockito-android:$versions.mockito",
            orchestrator  : "androidx.test:orchestrator:$versions.orchestrator",
            runner        : "androidx.test:runner:$versions.testRunner",
            rules         : "com.android.support.test:rules:$versions.testRules",
            core          : "androidx.test:core:$versions.testCore",
            lifecycle     : "androidx.arch.core:core-testing:$versions.lifecycle",
            espresso      : [
                core   : "androidx.test.espresso:espresso-core:$versions.espresso",
                rxidler: "com.squareup.rx.idler:rx2-idler:$versions.rxidler"
            ]
        ],

        plugins     : [
            agp     : "com.android.tools.build:gradle:$versions.agp",
            kotlin  : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
            spotless: "com.diffplug.spotless:spotless-plugin-gradle:$versions.spotless",
            gvp     : "com.github.ben-manes:gradle-versions-plugin:$versions.gvp"
        ]
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath deps.plugins.agp
        classpath deps.plugins.kotlin
        classpath deps.plugins.spotless
        classpath deps.plugins.gvp
    }
}

subprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    apply plugin: "com.github.ben-manes.versions"

    spotless {
        kotlin {
            target "**/*.kt"
            ktlint(versions.ktlint)
        }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
